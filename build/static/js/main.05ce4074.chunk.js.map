{"version":3,"sources":["App.js","index.js"],"names":["App","react_default","a","createElement","react_three_fiber_esm","shadows","dpr","camera","position","fov","intensity","angle","penumbra","shadow-mapSize","castShadow","PresentationControls","global","config","mass","tension","snap","rotation","polar","Math","PI","azimuth","Watch","scale","ContactShadows","rotation-x","opacity","width","height","blur","far","Environment","preset","props","ref","useRef","_useGLTF","useGLTF","nodes","materials","useFrame","state","t","clock","getElapsedTime","current","x","cos","y","sin","z","Object","assign","dispose","geometry","Object005_glass_0","material","glass","Html","transform","occlude","className","style","fontSize","receiveShadow","Object006_watch_0","watch","ReactDOM","render","Fragment","react","fallback","Loader","document","getElementById"],"mappings":"8PAIe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,IAAK,CAAC,EAAG,GAAIC,OAAQ,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,IAAK,KAC/DR,EAAAC,EAAAC,cAAA,gBAAcO,UAAW,KACzBT,EAAAC,EAAAC,cAAA,aAAWK,SAAU,CAAC,GAAI,GAAI,IAAKG,MAAO,IAAMC,SAAU,EAAGC,iBAAgB,CAAC,IAAK,KAAMC,YAAU,IACnGb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,QAAM,EACNC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,KAC5BC,KAAM,CAAEF,KAAM,EAAGC,QAAS,MAC1BE,SAAU,CAAC,EAAG,GAAK,GACnBC,MAAO,EAAEC,KAAKC,GAAK,EAAGD,KAAKC,GAAK,GAChCC,QAAS,EAAEF,KAAKC,GAAK,IAAKD,KAAKC,GAAK,IACpCvB,EAAAC,EAAAC,cAACuB,EAAD,CAAOL,SAAU,EAAEE,KAAKC,GAAK,EAAG,EAAG,GAAIhB,SAAU,CAAC,EAAG,IAAM,GAAImB,MAAO,QAExE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAgBC,aAAYN,KAAKC,GAAK,EAAGhB,SAAU,CAAC,GAAI,IAAK,GAAIsB,QAAS,IAAMC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAKC,IAAK,IACvHjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAaC,OAAO,UAK1B,SAASV,EAAMW,GACb,IAAMC,EAAMC,mBADQC,EAESC,YAAQ,iBAA7BC,EAFYF,EAEZE,MAAOC,EAFKH,EAELG,UAQf,OAPAC,YAAS,SAACC,GACR,IAAMC,EAAID,EAAME,MAAMC,iBACtBV,EAAIW,QAAQ5B,SAAS6B,GAAK3B,KAAKC,GAAK,KAAOD,KAAK4B,IAAIL,EAAI,GAAK,EAC7DR,EAAIW,QAAQ5B,SAAS+B,EAAI7B,KAAK8B,IAAIP,EAAI,GAAK,EAC3CR,EAAIW,QAAQ5B,SAASiC,GAAK,EAAI/B,KAAK8B,IAAIP,EAAI,MAAQ,GACnDR,EAAIW,QAAQzC,SAAS4C,GAAK,EAAI7B,KAAK8B,IAAIP,EAAI,MAAQ,KAGnD7C,EAAAC,EAAAC,cAAA,QAAAoD,OAAAC,OAAA,CAAOlB,IAAKA,GAASD,EAArB,CAA4BoB,QAAS,OACnCxD,EAAAC,EAAAC,cAAA,QAAMuD,SAAUhB,EAAMiB,kBAAkBD,SAAUE,SAAUjB,EAAUkB,OACpE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAMnC,MAAO,IAAKN,SAAU,CAACE,KAAKC,GAAK,EAAG,EAAG,GAAIhB,SAAU,CAAC,KAAM,IAAK,IAAKuD,WAAS,EAACC,SAAO,GAC3F/D,EAAAC,EAAAC,cAAA,OAAK8D,UAAU,cAAf,WACUhE,EAAAC,EAAAC,cAAA,QAAM+D,MAAO,CAAEC,SAAU,cAIvClE,EAAAC,EAAAC,cAAA,QAAMW,YAAU,EAACsD,eAAa,EAACV,SAAUhB,EAAM2B,kBAAkBX,SAAUE,SAAUjB,EAAU2B,SC7BrGC,IAASC,OACPvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAACuE,EAAA,SAAD,CAAUC,SAAU,MAClB1E,EAAAC,EAAAC,cAACH,EAAD,OAEFC,EAAAC,EAAAC,cAACyE,EAAA,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.05ce4074.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { useGLTF, PresentationControls, Environment, ContactShadows, Html } from '@react-three/drei';\n\nexport default function App() {\n  return (\n    <Canvas shadows dpr={[1, 2]} camera={{ position: [0, 0, 4], fov: 50 }}>\n      <ambientLight intensity={0.5} />\n      <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} shadow-mapSize={[512, 512]} castShadow />\n      <PresentationControls\n        global\n        config={{ mass: 2, tension: 500 }}\n        snap={{ mass: 4, tension: 1500 }}\n        rotation={[0, 0.3, 0]}\n        polar={[-Math.PI / 3, Math.PI / 3]}\n        azimuth={[-Math.PI / 1.4, Math.PI / 2]}>\n        <Watch rotation={[-Math.PI / 2, 0, 0]} position={[0, 0.25, 0]} scale={0.003} />\n      </PresentationControls>\n      <ContactShadows rotation-x={Math.PI / 2} position={[0, -1.4, 0]} opacity={0.75} width={10} height={10} blur={2.6} far={2} />\n      <Environment preset=\"city\" />\n    </Canvas>\n  );\n}\n\nfunction Watch(props) {\n  const ref = useRef();\n  const { nodes, materials } = useGLTF('/watch-v1.glb');\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime();\n    ref.current.rotation.x = -Math.PI / 1.75 + Math.cos(t / 4) / 8;\n    ref.current.rotation.y = Math.sin(t / 4) / 8;\n    ref.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20;\n    ref.current.position.y = (1 + Math.sin(t / 1.5)) / 10;\n  });\n  return (\n    <group ref={ref} {...props} dispose={null}>\n      <mesh geometry={nodes.Object005_glass_0.geometry} material={materials.glass}>\n        <Html scale={100} rotation={[Math.PI / 2, 0, 0]} position={[180, -350, 50]} transform occlude>\n          <div className=\"annotation\">\n            6.550 $ <span style={{ fontSize: '1.5em' }}></span>\n          </div>\n        </Html>\n      </mesh>\n      <mesh castShadow receiveShadow geometry={nodes.Object006_watch_0.geometry} material={materials.watch} />\n    </group>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport React, { Suspense } from 'react';\nimport { Loader } from '@react-three/drei';\nimport './styles.css';\nimport App from './App';\n\n/*\nauto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: ar-watches (https://sketchfab.com/ar-watches)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/3d-models/tag-heuer-monaco-x-gulf-watch-31ba7140fb3146b2af3cbdc13022421c\ntitle: Tag Heuer Monaco X GULF Watch\n*/\n\nReactDOM.render(\n  <>\n    <Suspense fallback={null}>\n      <App />\n    </Suspense>\n    <Loader />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}